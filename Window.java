package praktykibackupv2;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.apache.commons.io.FileUtils;

public class Window extends javax.swing.JFrame 
{

    public Window() 
    {
        initComponents();
        new File(pathToDirectoryTempBackup).mkdirs();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooserCreateDirectoryFrom = new javax.swing.JFileChooser();
        jFileChooserSetLocationFiles = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        buttonCreateDirectoryFrom = new javax.swing.JButton();
        buttonDownloadFilesFromFtps = new javax.swing.JButton();
        buttonSetDataBaseProperties = new javax.swing.JButton();
        buttonSetLocationFiles = new javax.swing.JButton();
        buttonDoIt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Backup");
        setLocationByPlatform(true);
        setResizable(false);

        buttonCreateDirectoryFrom.setText("Set directory from");
        buttonCreateDirectoryFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreateDirectoryFromActionPerformed(evt);
            }
        });

        buttonDownloadFilesFromFtps.setText("Download files from FTPs");
        buttonDownloadFilesFromFtps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDownloadFilesFromFtpsActionPerformed(evt);
            }
        });

        buttonSetDataBaseProperties.setText("Set DataBase properties");
        buttonSetDataBaseProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSetDataBasePropertiesActionPerformed(evt);
            }
        });

        buttonSetLocationFiles.setText("Set location files");
        buttonSetLocationFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSetLocationFilesActionPerformed(evt);
            }
        });

        buttonDoIt.setText("Do it!");
        buttonDoIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDoItActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonCreateDirectoryFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonDownloadFilesFromFtps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonSetDataBaseProperties, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                    .addComponent(buttonSetLocationFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonDoIt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(buttonDownloadFilesFromFtps)
                .addGap(18, 18, 18)
                .addComponent(buttonCreateDirectoryFrom)
                .addGap(18, 18, 18)
                .addComponent(buttonSetDataBaseProperties)
                .addGap(18, 18, 18)
                .addComponent(buttonSetLocationFiles)
                .addGap(18, 18, 18)
                .addComponent(buttonDoIt)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCreateDirectoryFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreateDirectoryFromActionPerformed
        openFileFromChooser();
        String nameFileFrom = fileFrom.getName();
        try 
        {
            FileUtils.copyDirectory(fileFrom, new File("\\"+ pathToDirectoryTempBackup + "\\" + nameFileFrom));
        } 
        catch (IOException ex) 
        {
            System.out.println("do nothing");
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }

      
    }//GEN-LAST:event_buttonCreateDirectoryFromActionPerformed

    private void buttonDownloadFilesFromFtpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDownloadFilesFromFtpsActionPerformed
        //Uncomment lines below if you want to use FillInFtp class. 
        // You have to comments rest of code in this method.
        
        // firstFtpFillIn = new FillInFtp(null, null, null, null);
        //firstFtpFillIn.setVisible(rootPaneCheckingEnabled);
        
    Thread worker = new Thread()
       {
            @Override
            public void run()
            {   
                WaitForFile waitForFile = new WaitForFile();
                waitForFile.setVisible(true);

                ReadFileFromFtp readFileFromFtp = new ReadFileFromFtp();
                 try 
                 {
                     readFileFromFtp.reader();
                 } 
                 catch (IOException ex) 
                 {
                     Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
                 } 
                 catch (Exception ex) 
                 {
                     Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
                 }
                
                 waitForFile.dispose();
            }
        };
       worker.start();
    }//GEN-LAST:event_buttonDownloadFilesFromFtpsActionPerformed

    private void buttonSetDataBasePropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSetDataBasePropertiesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonSetDataBasePropertiesActionPerformed

    private void buttonSetLocationFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSetLocationFilesActionPerformed
        saveFile();
    }//GEN-LAST:event_buttonSetLocationFilesActionPerformed

    private void buttonDoItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDoItActionPerformed
        try 
        {
            doIt();
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonDoItActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

     public File openFileFromChooser()
    {
        jFileChooserCreateDirectoryFrom.setCurrentDirectory(new File(System.getProperty("user.dir")));
        jFileChooserCreateDirectoryFrom.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jFileChooserCreateDirectoryFrom.setMultiSelectionEnabled(false);
        
        int temp = jFileChooserCreateDirectoryFrom.showDialog(rootPane, "Add");
        
        if(temp == jFileChooserCreateDirectoryFrom.APPROVE_OPTION)
        {
            fileFrom = jFileChooserCreateDirectoryFrom.getSelectedFile();
            pathFileChooserCreateDirectory = fileFrom.getPath();
        }
       System.out.println("fileFrom: " + fileFrom.toString() );
        return fileFrom;
    }
     
     
     
     public File saveFile()
     {
        int userSelection = jFileChooserSetLocationFiles.showSaveDialog(this);
        if (userSelection == jFileChooserSetLocationFiles.APPROVE_OPTION)
        {
            fileTo = jFileChooserSetLocationFiles.getSelectedFile();
            pathFileChooserSetLocationFiles = fileTo.getAbsolutePath();
        }
         //System.out.println("pathFileChooserSetLocationFiles " + pathFileChooserSetLocationFiles.toString());
        return fileTo; 
     }
     
     public void doIt() throws IOException
     {
        File dir = new File (pathToDirectoryTempBackup);
        String zipDirName = fileTo.getAbsolutePath() + ".zip";
        Zipping zippingFiles = new Zipping();
        zippingFiles.zipDirectory(dir, zipDirName);
       
        System.out.println("Done");
        new DoneWindow().setVisible(rootPaneCheckingEnabled);    
   
        FileUtils.deleteDirectory(new File(pathToDirectoryTempBackup)); // pathToDirectoryTempBackup
     }
     
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCreateDirectoryFrom;
    private javax.swing.JButton buttonDoIt;
    private javax.swing.JButton buttonDownloadFilesFromFtps;
    private javax.swing.JButton buttonSetDataBaseProperties;
    private javax.swing.JButton buttonSetLocationFiles;
    private javax.swing.JFileChooser jFileChooserCreateDirectoryFrom;
    private javax.swing.JFileChooser jFileChooserSetLocationFiles;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    public File fileFrom;
    public File fileTo;
    public String pathFileChooserCreateDirectory;
    public String pathFileChooserSetLocationFiles;
    FillInFtp firstFtpFillIn;
    public static String pathToDirectoryTempBackup = "C:\\tempBackupXAYBZC";
}
